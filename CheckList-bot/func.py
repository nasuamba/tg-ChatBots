import pymongo


# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ MongoDB
db_client = pymongo.MongoClient("mongodb+srv://nasuamba:Sokol366@myfirstcluster.znekeok.mongodb.net/test")
db = db_client["CheckList_PZD_KO"] # –ë–î
c = db["Users"] # –∫–æ–ª–ª–µ–∫—Ü–∏—è
c_CheckLists = db["CheckLists"] # –∫–æ–ª–ª–µ–∫—Ü–∏—è


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ mongoDB
def DB_EDIT(collection, filter_field, filter_value, field, value):
    if collection.find_one({filter_field: filter_value}) == None:
        collection.insert_one({filter_field: filter_value, field: value})
    else:
        filter = {filter_field: filter_value} # –æ–±–Ω–æ–≤–ª—è–µ–º—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
        newvalues = {"$set": {field: value}} # –Ω–æ–≤–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        collection.update_one(filter, newvalues)


def PROFILE_SHOW(ID):
            if c.find_one({'user_id': ID}, {'user_id': 0, '_id': 0, '–§–ò–û': 0, '—Ç–µ–ª–µ—Ñ–æ–Ω': 0, '–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ': 0}) == {}:
                role = '–ø—É—Å—Ç–æ'
            else:
                role = c.find_one({'user_id': ID}, {'user_id': 0, '_id': 0, '–§–ò–û': 0, '—Ç–µ–ª–µ—Ñ–æ–Ω': 0, '–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ': 0})['—Ä–æ–ª—å']
            
            if c.find_one({'user_id': ID}, {'user_id': 0, '_id': 0, '—Ä–æ–ª—å': 0, '—Ç–µ–ª–µ—Ñ–æ–Ω': 0, '–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ': 0}) == {}:
                name = '–ø—É—Å—Ç–æ'
            else:
                name = c.find_one({'user_id': ID}, {'user_id': 0, '_id': 0, '—Ä–æ–ª—å': 0, '—Ç–µ–ª–µ—Ñ–æ–Ω': 0, '–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ': 0})['–§–ò–û']
            
            if c.find_one({'user_id': ID}, {'user_id': 0, '_id': 0, '—Ä–æ–ª—å': 0, '–§–ò–û': 0, '–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ': 0}) == {}:
                phone = '–ø—É—Å—Ç–æ'
            else:
                phone = c.find_one({'user_id': ID}, {'user_id': 0, '_id': 0, '—Ä–æ–ª—å': 0, '–§–ò–û': 0, '–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ': 0})['—Ç–µ–ª–µ—Ñ–æ–Ω']
            
            if c.find_one({'user_id': ID}, {'user_id': 0, '_id': 0, '—Ä–æ–ª—å': 0, '–§–ò–û': 0, '—Ç–µ–ª–µ—Ñ–æ–Ω': 0}) == {}:
                unit = '–ø—É—Å—Ç–æ'
            else:
                unit = c.find_one({'user_id': ID}, {'user_id': 0, '_id': 0, '—Ä–æ–ª—å': 0, '–§–ò–û': 0, '—Ç–µ–ª–µ—Ñ–æ–Ω': 0})['–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ']


            mess = f'–î–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è' \
                   f'\n' \
                   f'\nüë®‚Äçüíª –†–æ–ª—å: {role}' \
                   f'\nüë§ –§–ò–û: {name}' \
                   f'\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}' \
                   f'\nüè´ –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: {unit}'
            
            return mess


def CHECK_LIST_SHOW(RNP):
    
    try: organizer = c_CheckLists.find_one({'–†–ù–ü': RNP})['–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä']
    except: organizer = '–ø—É—Å—Ç–æ'

    try: initiator = c_CheckLists.find_one({'–†–ù–ü': RNP})['–∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä']
    except: initiator = '–ø—É—Å—Ç–æ'
    
    mess = f'–ß–µ–∫ –õ–∏—Å—Ç —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∏' \
           f'\n' \
           f'\n#Ô∏è‚É£ –†–ù–ü: {RNP}' \
           f'\nüë®‚Äçüíª –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {organizer}' \
           f'\nüôã –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä: {initiator}'
            
    return mess